server.port=8080

### Local PostgreSQL ###
spring.datasource.url=${psql_DATABASE_URL}
spring.datasource.username=${psql_DATABASE_USERNAME}
spring.datasource.password=${psql_DATABASE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.thymeleaf.cache=true

###Local mysql###
#spring.datasource.url=${mysql_DATABASE_URL}
#spring.datasource.username=${mysql_DATABASE_USERNAME}
#spring.datasource.password=${mysql_DATABASE_PASSWORD}
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect
#spring.jpa.show-sql=true
#spring.thymeleaf.cache=true

###AWS###
#spring.datasource.url=jdbc:mysql://<rds-instance-endpoint>:<port>/<database-name>
#spring.datasource.username=<username>
#spring.datasource.password=<password>
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver



###Google Cloud SQL###
#database=mysql
#
#spring.cloud.gcp.sql.database-name=platstyle
#spring.cloud.gcp.sql.instance-connection-name=platstyle:us-central1:my-instance
#
## Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.5+.
#spring.sql.init.mode=always
## In the last line, add mysql to the spring.profiles.active property
#spring.profiles.active=mysql
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.thymeleaf.cache=true


###HEROKU###
## Use the Heroku PostgreSQL database URL
#spring.datasource.url=${DATABASE_URL}
#
## Set these properties to blank as they will be provided by Heroku
#spring.datasource.username=
#spring.datasource.password=
#
## Use PostgreSQL dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#
## Ensure Hibernate does not attempt to create a new schema on startup
#spring.jpa.hibernate.ddl-auto=update
#
## Show SQL queries (optional)
#spring.jpa.show-sql=true
#
## Disable Thymeleaf cache (optional)
#spring.thymeleaf.cache=false